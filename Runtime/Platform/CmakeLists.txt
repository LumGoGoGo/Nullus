# 收集头文件和源文件
###############################################################################
file(GLOB_RECURSE PLATFORM_HEAD_FILES
  ${CMAKE_CURRENT_SOURCE_DIR}/*.h
  ${CMAKE_CURRENT_SOURCE_DIR}/*.inl
)
file(GLOB_RECURSE PLATFORM_SOURCE_FILES
  ${CMAKE_CURRENT_SOURCE_DIR}/*.cpp
  ${CMAKE_CURRENT_SOURCE_DIR}/*.c
)

# 对文件进行分组
###############################################################################
source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${PLATFORM_HEAD_FILES})
source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${PLATFORM_SOURCE_FILES})

if(NLS_USE_SHARED_LIBRARY)
add_library(NLS_Platform SHARED ${PLATFORM_HEAD_FILES} ${PLATFORM_SOURCE_FILES})

target_compile_definitions(
  NLS_Platform
  PRIVATE
  NLS_Platform_EXPORT
)
else()
add_library(NLS_Platform STATIC ${PLATFORM_HEAD_FILES} ${PLATFORM_SOURCE_FILES})
endif()

# 设置包含路径
###############################################################################
target_include_directories(
    NLS_Platform
  PUBLIC # 其他项目使用头文件时所需的目录
    $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>
)

target_link_libraries(
  NLS_Platform
    PUBLIC # 使用该库时必须依赖的库
    NLS_Math
    NLS_Core
)
